;;; $DOOMDIR/config.el -*- lexical-binding: t; -*-

;; Place your private configuration here! Remember, you do not need to run 'doom
;; sync' after modifying this file!


;; Some functionality uses this to identify you, e.g. GPG configuration, email
;; clients, file templates and snippets.
(setq user-full-name "Miguel Lloreda"
      user-mail-address "{{ .email }}")

;; Doom exposes five (optional) variables for controlling fonts in Doom. Here
;; are the three important ones:
;;
;; + `doom-font'
;; + `doom-variable-pitch-font'
;; + `doom-big-font' -- used for `doom-big-font-mode'; use this for
;;   presentations or streaming.
;;
;; They all accept either a font-spec, font string ("Input Mono-12"), or xlfd
;; font string. You generally only need these two:
;; (setq doom-font (font-spec :family "monospace" :size 12 :weight 'semi-light)
;;       doom-variable-pitch-font (font-spec :family "sans" :size 13))

;; There are two ways to load a theme. Both assume the theme is installed and
;; available. You can either set `doom-theme' or manually load a theme with the
;; `load-theme' function. This is the default:
(setq doom-theme 'doom-one-light)

;; If you use `org' and don't want your org files in the default location below,
;; change `org-directory'. It must be set before org loads!
(setq org-directory "~/Dropbox/org/")
(setq org-default-notes-file "~/Dropbox/org/index.org")
(after! org
  (setq org-tags-column -80))

(setq org-agenda-files
      '(
        "~/Dropbox/org/birthdays.org"
        "~/Dropbox/org/emacs.org"
        "~/Dropbox/org/events.org"
        "~/Dropbox/org/food.org"
        "~/Dropbox/org/index.org"
        "~/Dropbox/org/read.org"
        "~/Dropbox/org/routine.org"
        "~/Dropbox/org/tech.org"
        ))

(setq org-roam-directory "~/Dropbox/org/roam/")
(setq org-roam-db-location "~/Dropbox/org-roam.db")
;; (setq org-roam-dailies-directory "~/Dropbox/org/roam/daily/")

(setq org-journal-dir "~/Dropbox/org/journal/")
(setq org-journal-file-type 'monthly)
(setq org-journal-enable-agenda-integration t)

(setq org-noter-notes-search-path '("~/Dropbox/org/annotations"))

;; This determines the style of line numbers in effect. If set to `nil', line
;; numbers are disabled. For relative line numbers, set this to `relative'.
(setq display-line-numbers-type t)

;; Here are some additional functions/macros that could help you configure Doom:
;;
;; - `load!' for loading external *.el files relative to this one
;; - `use-package!' for configuring packages
;; - `after!' for running code after a package has loaded
;; - `add-load-path!' for adding directories to the `load-path', relative to
;;   this file. Emacs searches the `load-path' when you load packages with
;;   `require' or `use-package'.
;; - `map!' for binding new keys
;;
;; To get information about any of these functions/macros, move the cursor over
;; the highlighted symbol at press 'K' (non-evil users must press 'C-c c k').
;; This will open documentation for it, including demos of how they are used.
;;
;; You can also try 'gd' (or 'C-c c d') to jump to their definition and see how
;; they are implemented.

(use-package! lsp-mode
  :ensure t
  :commands (lsp lsp-deferred)
  :hook (go-mode . lsp-deferred))

(use-package! conda
  :ensure t
  :custom
{{- if eq .chezmoi.os "darwin" }}
  (conda-anaconda-home "~/miniforge3"))
{{- else if eq .chezmoi.os "linux" }}
  (conda-anaconda-home "~/anaconda3"))
{{- end }}

(use-package! org-super-agenda
  :commands org-super-agenda-mode)

(after! org-agenda
  (org-super-agenda-mode))

(setq org-agenda-custom-commands
      '(("o" "Overview"
         ((agenda "" ((org-agenda-span 'day)
                      (org-super-agenda-groups
                       '((:name "Today"
                          :time-grid t
                          :date today
                          :todo "TODAY"
                          :scheduled today
                          :order 1)))))
          (alltodo "" ((org-agenda-overriding-header "")
                       (org-super-agenda-groups
                        '((:name "Next to do"
                           :todo "NEXT"
                           :order 1)
                          (:name "Important"
                           :tag "Important"
                           :priority "A"
                           :order 6)
                          (:name "Due Today"
                           :deadline today
                           :order 2)
                          (:name "Scheduled Today"
                           :scheduled today
                           :order 3)
                          (:name "Due Soon"
                           :deadline future
                           :order 8)
                          (:name "Scheduled Overdue"
                           :scheduled past
                           :face error
                           :order 7)
                          (:name "Overdue"
                           :deadline past
                           :face error
                           :order 7)
                          ;; (:name "X"
                          ;;  :tag "x"
                          ;;  :order 10)
                          (:name "Issues"
                           :tag "Issue"
                           :order 12)
                          (:name "Emacs"
                           :tag "Emacs"
                           :order 13)
                          (:name "Projects"
                           :tag "Projects"
                           :order 14)
                          (:name "Research"
                           :tag "Research"
                           :order 15)
                          (:name "To read"
                           :tag "Books"
                           :tag "Read"
                           :order 30)
                          (:name "Waiting"
                           :todo "WAITING"
                           :order 20)
                          ;; (:name "Y"
                          ;;  :tag "y"
                          ;;  :order 32)
                          (:name "Trivial"
                           :priority<= "E"
                           :tag ("Trivial" "Unimportant")
                           :todo ("SOMEDAY" )
                           :order 90)
                          (:discard (:tag ("Chore" "Routine" "Daily")))))))))))
